{"id":"tools/ascii.ts","dependencies":[{"name":"/mnt/c/Users/nico/Documents/Code/mooieman/tsconfig.json","includedInParent":true,"mtime":1580734737735},{"name":"/mnt/c/Users/nico/Documents/Code/mooieman/src/package.json","includedInParent":true,"mtime":1572482141418}],"generated":{"js":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar asciify = require(\"asciify-image\");\n\nexports.logAscii = function (img, msg) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          console.log(msg);\n          _b = (_a = console).log;\n          return [4\n          /*yield*/\n          , asciify(img, {\n            fit: 'box',\n            width: 16,\n            height: 16\n          })];\n\n        case 1:\n          _b.apply(_a, [_c.sent()]);\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};"},"sourceMaps":{"js":{"mappings":[{"source":"tools/ascii.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":148,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":148,"column":4}},{"source":"tools/ascii.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":148,"column":11}},{"source":"tools/ascii.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":148,"column":14}},{"source":"tools/ascii.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":148,"column":21}},{"source":"tools/ascii.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":148,"column":22}},{"source":"tools/ascii.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":148,"column":37}},{"source":"tools/ascii.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":148,"column":38}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":13},"generated":{"line":150,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":13},"generated":{"line":150,"column":7}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":13},"generated":{"line":150,"column":8}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":13},"generated":{"line":150,"column":16}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":24},"generated":{"line":150,"column":19}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":31},"generated":{"line":150,"column":29}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":24},"generated":{"line":150,"column":32}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":44},"generated":{"line":150,"column":34}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":24},"generated":{"line":150,"column":37}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":150,"column":39}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":9}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":18}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":19}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":24}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":25}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":27}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":32}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":33}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":35}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":40}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":41}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":43}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":151,"column":55}},{"source":"tools/ascii.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":157,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":157,"column":10}},{"source":"tools/ascii.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":157,"column":17}},{"source":"tools/ascii.ts","name":null,"original":{"line":3,"column":12},"generated":{"line":157,"column":18}},{"source":"tools/ascii.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":157,"column":21}},{"source":"tools/ascii.ts","name":null,"original":{"line":3,"column":16},"generated":{"line":157,"column":22}},{"source":"tools/ascii.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":157,"column":25}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":158,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":158,"column":10}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":158,"column":12}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":158,"column":15}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":158,"column":16}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":158,"column":18}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":158,"column":21}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":158,"column":28}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":12},"generated":{"line":158,"column":30}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":158,"column":33}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":159,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":159,"column":17}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":159,"column":18}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":160,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":161,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":22},"generated":{"line":161,"column":12}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":29},"generated":{"line":161,"column":19}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":30},"generated":{"line":161,"column":20}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":29},"generated":{"line":161,"column":23}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":35},"generated":{"line":161,"column":25}},{"source":"tools/ascii.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":162,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":162,"column":12}},{"source":"tools/ascii.ts","name":null,"original":{"line":5,"column":11},"generated":{"line":162,"column":15}},{"source":"tools/ascii.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":162,"column":17}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":35},"generated":{"line":162,"column":22}},{"source":"tools/ascii.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":163,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":163,"column":12}},{"source":"tools/ascii.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":163,"column":17}},{"source":"tools/ascii.ts","name":null,"original":{"line":6,"column":15},"generated":{"line":163,"column":19}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":35},"generated":{"line":163,"column":21}},{"source":"tools/ascii.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":164,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":164,"column":12}},{"source":"tools/ascii.ts","name":null,"original":{"line":7,"column":14},"generated":{"line":164,"column":18}},{"source":"tools/ascii.ts","name":null,"original":{"line":7,"column":16},"generated":{"line":164,"column":20}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":35},"generated":{"line":165,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":29},"generated":{"line":165,"column":11}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":165,"column":12}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":165,"column":13}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":168,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":168,"column":10}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":168,"column":12}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":168,"column":13}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":168,"column":18}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":168,"column":19}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":168,"column":21}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":168,"column":23}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":168,"column":24}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":168,"column":26}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":168,"column":27}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":168,"column":31}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":168,"column":33}},{"source":"tools/ascii.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":168,"column":34}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":175,"column":3}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":56},"generated":{"line":175,"column":4}},{"source":"tools/ascii.ts","name":null,"original":{"line":9,"column":1},"generated":{"line":176,"column":0}},{"source":"tools/ascii.ts","name":null,"original":{"line":2,"column":13},"generated":{"line":176,"column":1}}],"sources":{"tools/ascii.ts":"import asciify = require('asciify-image')\r\nexport const logAscii = async (img: Buffer, msg?: string) => {\r\n    console.log(msg)\r\n    console.log(await asciify(img, {\r\n        fit: 'box',\r\n        width: 16,\r\n        height: 16\r\n    }))\r\n};"},"lineCount":null}},"error":null,"hash":"025309c77f5d8b1255f7ed6cb42fa420","cacheData":{"env":{}}}